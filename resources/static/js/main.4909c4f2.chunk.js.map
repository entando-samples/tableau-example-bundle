{"version":3,"sources":["App.js","custom-elements/TableauJsElement.js","components/config/AppConfig.js","custom-elements/AppConfigElement.js"],"names":["App","url","this","props","className","options","hideTabs","hideToolbar","Component","ATTRIBUTES","TableauJsElement","name","oldValue","newValue","Object","values","includes","Error","mountPoint","render","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define","AppConfig","handleChange","e","input","target","setState","value","state","htmlFor","type","onChange","AppConfigElement","reactRootRef","React","createRef","current","ref","get"],"mappings":"2OAGMA,E,4JACJ,WACE,IAKQC,EAAQC,KAAKC,MAAbF,IAER,OACE,qBAAKG,UAAU,MAAf,SACE,cAAC,IAAD,CACEH,IAAKA,EACLI,QAXU,CACdC,UAAU,EACVC,aAAa,W,GAJDC,aAoBHR,ICnBTS,EAAa,CACjBR,IAAK,OAGDS,E,8KAKF,SAAyBC,EAAMC,EAAUC,GACvC,IAAKC,OAAOC,OAAON,GAAYO,SAASL,GACtC,MAAM,IAAIM,MAAJ,uCAA0CN,IAE9CT,KAAKgB,YAAcL,IAAaD,GAClCV,KAAKiB,W,+BAIT,WACIjB,KAAKgB,WAAaE,SAASC,cAAc,OACzCnB,KAAKoB,YAAYpB,KAAKgB,YACtB,IAAMjB,EAAMC,KAAKqB,aAAad,EAAWR,KACzCuB,IAASL,OAAO,cAAC,EAAD,CAAKlB,IAAKA,IAAQC,KAAKgB,e,+BAjB3C,WACE,OAAOJ,OAAOC,OAAON,O,eAFIgB,cAsB/BC,eAAeC,OAAO,qBAAsBjB,GAE7BA,I,QCDAkB,E,kDA5Bb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IAMR0B,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAEE,OAChB,EAAKC,SAAL,eACGF,EAAMpB,KAAOoB,EAAMG,SARtB,EAAKC,MAAQ,CACXlC,IAAKE,EAAMF,KAAO,kEAHH,E,0CAcnB,WACE,IAAQA,EAAQC,KAAKiC,MAAblC,IACR,OACE,gCACE,4DACA,gCACE,uBAAOmC,QAAQ,MAAf,8BACA,uBAAOzB,KAAK,MAAMuB,MAAOjC,EAAKoC,KAAK,OAAOC,SAAUpC,KAAK2B,yB,GAtB3CrB,aCElBC,EAAa,CACjBR,IAAK,OAGDsC,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,aAAeC,IAAMC,YAC1B,EAAKxB,WAAa,KAHN,E,wCAMd,WACE,OAAOhB,KAAKsC,aAAaG,QAAUzC,KAAKsC,aAAaG,QAAQR,MAAQ,I,IAGvE,SAAWD,GACT,OAAOhC,KAAKsC,aAAaG,QAAQV,SAASC,K,sCAO5C,SAAyBvB,EAAMC,EAAUC,GACvC,IAAKC,OAAOC,OAAON,GAAYO,SAASL,GACtC,MAAM,IAAIM,MAAJ,uCAA0CN,IAE9CT,KAAKgB,YAAcL,IAAaD,GAClCV,KAAKiB,W,+BAIT,WACEjB,KAAKgB,WAAaE,SAASC,cAAc,OACzCnB,KAAKoB,YAAYpB,KAAKgB,YAEtB,IAAMjB,EAAMC,KAAKqB,aAAad,EAAWR,KACzCuB,IAASL,OAAO,cAAC,EAAD,CAAWyB,IAAK1C,KAAKsC,aAAcvC,IAAKA,IAAQC,KAAKgB,e,+BAlBvE,WACE,OAAOJ,OAAOC,OAAON,O,eAhBMgB,cAqC1BC,eAAemB,IAAI,2BACtBnB,eAAeC,OAAO,yBAA0BY,K","file":"static/js/main.4909c4f2.chunk.js","sourcesContent":["import Tableau from \"tableau-react\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  render() {\n    const options = {\n      hideTabs: true,\n      hideToolbar: true\n    };\n\n    const { url } = this.props;\n\n    return (\n      <div className=\"App\">\n        <Tableau\n          url={url}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../App';\n\nconst ATTRIBUTES = {\n  url: 'url',\n};\n\nclass TableauJsElement extends HTMLElement {\n    static get observedAttributes() {\n      return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (!Object.values(ATTRIBUTES).includes(name)) {\n        throw new Error(`Untracked changed attribute: ${name}`);\n      }\n      if (this.mountPoint && newValue !== oldValue) {\n        this.render();\n      }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        const url = this.getAttribute(ATTRIBUTES.url);\n        ReactDOM.render(<App url={url}/>, this.mountPoint);\n    }\n}\n\ncustomElements.define('x-tableaujs-widget', TableauJsElement);\n\nexport default TableauJsElement;\n","import React, {Component} from 'react';\n\nclass AppConfig extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: props.url || 'http://public.tableau.com/views/RegionalSampleWorkbook/Economy',\n    };\n  }\n\n  handleChange = e => {\n    const input = e.target;\n    this.setState({\n      [input.name]: input.value,\n    });\n  };\n\n  render() {\n    const { url } = this.state;\n    return (\n      <div>\n        <h1>Tableau Demo Configuration</h1>\n        <div>\n          <label htmlFor=\"url\">Tableau View URL</label>\n          <input name=\"url\" value={url} type=\"text\" onChange={this.handleChange}  />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppConfig;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppConfig from '../components/config/AppConfig';\n\nconst ATTRIBUTES = {\n  url: 'url',\n};\n\nclass AppConfigElement extends HTMLElement {\n  constructor() {\n    super();\n    this.reactRootRef = React.createRef();\n    this.mountPoint = null;\n  }\n\n  get config() {\n    return this.reactRootRef.current ? this.reactRootRef.current.state : {};\n  }\n\n  set config(value) {\n    return this.reactRootRef.current.setState(value);\n  }\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!Object.values(ATTRIBUTES).includes(name)) {\n      throw new Error(`Untracked changed attribute: ${name}`);\n    }\n    if (this.mountPoint && newValue !== oldValue) {\n      this.render();\n    }\n  }\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n\n    const url = this.getAttribute(ATTRIBUTES.url);\n    ReactDOM.render(<AppConfig ref={this.reactRootRef} url={url}/>, this.mountPoint);\n  }\n}\n\nif (!customElements.get('x-tableaujs-app-config')) {\n  customElements.define('x-tableaujs-app-config', AppConfigElement);\n}\n"],"sourceRoot":""}